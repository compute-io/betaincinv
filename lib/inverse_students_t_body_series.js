'use strict';

// MODULES //

var evaluate_polynomial = require( './evaluate_polynomial.js' ),
	tgamma_delta_ratio = require( './tgamma_delta_ratio.js' );


// FUNCTIONS //

var sqrt = Math.sqrt;


// CONSTANTS //

var PI = Math.PI;

function inverse_students_t_body_series( df, u, pol ) {
	var idf, v;
	//
	// Body series for small N:
	//
	// Start with Eq 56 of Shaw:
	//
	v = tgamma_delta_ratio(df / 2, 0.5, pol) *
		sqrt( df * PI ) * ( u - 0.5 );
	//
	// Workspace for the polynomial coefficients:
	//
	var c = new Array( 11 );
	c[ 0 ] = 0;
	c[ 1 ] = 1;
	//
	// Figure out what the coefficients are, note these depend
	// only on the degrees of freedom (Eq 57 of Shaw):
	//
	idf = 1 / df;
	c[2] = 0.16666666666666666667 + 0.16666666666666666667 * idf;
	c[3] = (0.0083333333333333333333 * idf +
		0.066666666666666666667) * idf +
		0.058333333333333333333;
	c[4] = ((0.00019841269841269841270 * idf +
		0.0017857142857142857143) * idf +
		0.026785714285714285714) * idf +
		0.025198412698412698413;
	c[5] = (((2.7557319223985890653e-6 * idf +
		0.00037477954144620811287) * idf -
		0.0011078042328042328042) * idf +
		0.010559964726631393298) * idf +
		0.012039792768959435626;
	c[6] = ((((2.5052108385441718775e-8 * idf -
		0.000062705427288760622094) * idf +
		0.00059458674042007375341) * idf -
		0.0016095979637646304313) * idf +
		0.0061039211560044893378) * idf +
		0.0038370059724226390893;
	c[7] = (((((1.6059043836821614599e-10 * idf +
		0.000015401265401265401265) * idf -
		0.00016376804137220803887) * idf +
		0.00069084207973096861986) * idf -
		0.0012579159844784844785) * idf +
		0.0010898206731540064873) * idf +
		0.0032177478835464946576;
	c[8] = ((((((7.6471637318198164759e-13 * idf -
		3.9851014346715404916e-6) * idf +
		0.000049255746366361445727) * idf -
		0.00024947258047043099953) * idf +
		0.00064513046951456342991) * idf -
		0.00076245135440323932387) * idf +
		0.000033530976880017885309) * idf +
		0.0017438262298340009980;
	c[9] = (((((((2.8114572543455207632e-15 * idf +
		1.0914179173496789432e-6) * idf -
		0.000015303004486655377567) * idf +
		0.000090867107935219902229) * idf -
		0.00029133414466938067350) * idf +
		0.00051406605788341121363) * idf -
		0.00036307660358786885787) * idf -
		0.00031101086326318780412) * idf +
		0.00096472747321388644237;
	c[10] = ((((((((8.2206352466243297170e-18 * idf -
		3.1239569599829868045e-7) * idf +
		4.8903045291975346210e-6) * idf -
		0.000033202652391372058698) * idf +
		0.00012645437628698076975) * idf -
		0.00028690924218514613987) * idf +
		0.00035764655430568632777) * idf -
		0.00010230378073700412687) * idf -
		0.00036942667800009661203) * idf +
		0.00054229262813129686486;
	//
	// The result is then a polynomial in v (see Eq 56 of Shaw):
	//
	// evaluate_odd_polynomial:
	return c.shift() + v * evaluate_polynomial( c, v*v, 10 );
}

module.exports = inverse_students_t_body_series;
